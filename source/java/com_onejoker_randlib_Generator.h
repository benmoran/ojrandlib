/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_onejoker_randlib_Generator */

#ifndef _Included_com_onejoker_randlib_Generator
#define _Included_com_onejoker_randlib_Generator
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nStructSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nStructSize
  (JNIEnv *, jclass);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nInit
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nInit
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nAlgorithmCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nAlgorithmCount
  (JNIEnv *, jclass);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nAlgorithmID
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nAlgorithmID
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nAlgorithmName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_onejoker_randlib_Generator_nAlgorithmName
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nAlgorithmSeedSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nAlgorithmSeedSize
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nAlgorithmStateSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nAlgorithmStateSize
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nAlgorithmBufSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nAlgorithmBufSize
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nGetSystemEntropy
 * Signature: (Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nGetSystemEntropy
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nSetSeeded
 * Signature: (Ljava/nio/ByteBuffer;I)I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nSetSeeded
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nGetAlgorithm
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nGetAlgorithm
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nSetAlgorithm
 * Signature: (Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nSetAlgorithm
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nSetState
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nSetState
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nSetBuf
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nSetBuf
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nCallOpen
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nCallOpen
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nCallClose
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nCallClose
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nCallSeed
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nCallSeed
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nCallReseed
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nCallReseed
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nCallRefill
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nCallRefill
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nNext16
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nNext16
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nNext32
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nNext32
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nNext64
 * Signature: (Ljava/nio/ByteBuffer;)J
 */
JNIEXPORT jlong JNICALL Java_com_onejoker_randlib_Generator_nNext64
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nNextDouble
 * Signature: (Ljava/nio/ByteBuffer;)D
 */
JNIEXPORT jdouble JNICALL Java_com_onejoker_randlib_Generator_nNextDouble
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nNextSignedDouble
 * Signature: (Ljava/nio/ByteBuffer;)D
 */
JNIEXPORT jdouble JNICALL Java_com_onejoker_randlib_Generator_nNextSignedDouble
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nNextGaussian
 * Signature: (Ljava/nio/ByteBuffer;)D
 */
JNIEXPORT jdouble JNICALL Java_com_onejoker_randlib_Generator_nNextGaussian
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nRand
 * Signature: (Ljava/nio/ByteBuffer;I)I
 */
JNIEXPORT jint JNICALL Java_com_onejoker_randlib_Generator_nRand
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     com_onejoker_randlib_Generator
 * Method:    nDiscard
 * Signature: (Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_onejoker_randlib_Generator_nDiscard
  (JNIEnv *, jclass, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
